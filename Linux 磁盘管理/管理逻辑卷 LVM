逻辑卷 主要用于做在线拉伸 空间。

LVM是 Logical Volume Manager 逻辑卷管理

物理设备

物理卷   physical volume PV 
在LVM 系统中使用设备之前，必须将设备初始化为物理卷 PV, LVM 工具会将物理卷划分为物理区块PE ,PE 是物理卷上最小存储块的小块数据。


物理拓展 物理区块 physical extend PE 

卷组  VG volume group ,卷组是存储池，由一个或多个物理卷组成
                       它在功能上与基本存储中的整个磁盘相当，一个PV 只能分配给一个VG，VG 可以包含未使用的空间和任意数目的逻辑卷。

逻辑卷 logical volume LV
                     逻辑卷根据卷组中空闲物理区块创建，提供应用、用户和操作系统所使用的存储设备，LV是逻辑区块 LE的集合 ，LE 映射到
                     物理区块（PV的最小存储块），默认情况下 每个LE将映射到一个PE
最终使用的是逻辑卷 LV

boot 分区不能做成 LVM
-----------------------------------------
第一步 是 PV 

第二步 是 VG

第三步 是 LV

第四步 是 格式化

第五步 是 挂载

-----------------------------------------
1. 先创建3 个主分区
2，封装成 PV 使用命令 pvcreate 
[root@centosx ~]# pvcreate /dev/sdb{1..3}
  Physical volume "/dev/sdb1" successfully created.
  Physical volume "/dev/sdb2" successfully created.
  Physical volume "/dev/sdb3" successfully created.
3, 可以使用pvdisplay 命令来查看PV
[root@centosx ~]# pvdisplay 
  "/dev/sdb1" is a new physical volume of "100.00 MiB"
  --- NEW Physical volume ---
  PV Name               /dev/sdb1
  VG Name               
  PV Size               100.00 MiB
  Allocatable           NO
  PE Size               0   
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               qxWs0V-3nSP-HPUj-0Mpa-cwcq-xsts-X9aY7W
   
  "/dev/sdb3" is a new physical volume of "100.00 MiB"
  --- NEW Physical volume ---
  PV Name               /dev/sdb3
  VG Name               
  PV Size               100.00 MiB
  Allocatable           NO
  PE Size               0   
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               NXIF0J-yjaT-0b33-1GTF-1pLo-uWyx-8FivRo
   
  "/dev/sdb2" is a new physical volume of "100.00 MiB"
  --- NEW Physical volume ---
  PV Name               /dev/sdb2 ------------------------------------------------可以看出 PV的名字 就是设备的名字
  VG Name               
  PV Size               100.00 MiB
  Allocatable           NO
  PE Size               0   
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               WP9XVu-4ItV-c8Jm-ct6b-f9PA-0NnE-Z3Va3p
   
 也可以使用pvs 命令来查看 PVname 和 VG，现在可以看到 没有划分到 VG 
[root@centosx ~]# pvs
  PV         VG Fmt  Attr PSize   PFree  
  /dev/sdb1     lvm2 ---  100.00m 100.00m
  /dev/sdb2     lvm2 ---  100.00m 100.00m
  /dev/sdb3     lvm2 ---  100.00m 100.00m
[root@centosx ~]# 

4， 将 PV 加入 VG ， 同时给 VG 起一个名字：
可以先将 /dev/sdb1 和/dev/sdb2 加入VG ，VG的名字是 myvg2024
[root@centosx ~]# vgcreate myvg2024 /dev/sdb1 /dev/sdb2
  Volume group "myvg2024" successfully created

用pvs 命令查看pv 加入 VG 后的详情：
[root@centosx ~]# pvs
  PV         VG       Fmt  Attr PSize   PFree  
  /dev/sdb1  myvg2024 lvm2 a--   96.00m  96.00m
  /dev/sdb2  myvg2024 lvm2 a--   96.00m  96.00m
  /dev/sdb3           lvm2 ---  100.00m 100.00m
[root@centosx ~]# 

用 vgdispaly 来查看 VG 的详情：
[root@centosx ~]# vgdisplay
  --- Volume group ---
  VG Name               myvg2024
  System ID             
  Format                lvm2
  Metadata Areas        2
  Metadata Sequence No  1
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                0
  Open LV               0
  Max PV                0
  Cur PV                2
  Act PV                2
  VG Size               192.00 MiB
  PE Size               4.00 MiB
  Total PE              48
  Alloc PE / Size       0 / 0   
  Free  PE / Size       48 / 192.00 MiB
  VG UUID               kvmqAx-0uWi-ohA0-TfmN-lRD3-oUNN-n6VbCE
   
也可以用 vgs 来查看vg 
[root@centosx ~]# vgs
  VG       #PV #LV #SN Attr   VSize   VFree  
  myvg2024   2   0   0 wz--n- 192.00m 192.00m  --------- 可以看到目前没有 LV 卷

5 ，创建 LV 卷，使用 lvcreate 命令 同时给 lv 起个名字，如 名字叫 mylv2024

[root@centosx ~]# lvcreate -n mylv2024 myvg2024 -L 150M ---------- 从 VG 创建 LV 并指定 LV 的大小为 150M
  Rounding up size to full physical extent 152.00 MiB
  Logical volume "mylv2024" created.

使用 lvdisplay 命令来查看 LV 的详情：
[root@centosx ~]# lvdisplay
  --- Logical volume ---
  LV Path                /dev/myvg2024/mylv2024
  LV Name                mylv2024
  VG Name                myvg2024
  LV UUID                VwWz69-6Y35-DRGP-Upf0-SpQn-69s9-fa7Yy0
  LV Write Access        read/write
  LV Creation host, time centosx, 2024-05-11 13:26:59 +0800
  LV Status              available
  # open                 0
  LV Size                152.00 MiB
  Current LE             38
  Segments               2
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:0

也可以使用lvs 来查看详情：
[root@centosx ~]# lvs
  LV       VG       Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  mylv2024 myvg2024 -wi-a----- 152.00m          

6，格式化 LV ， 使用 mkfs.ext4 或 mkfs.xfs 命令 将LV 进行格式化：

[root@centosx ~]# mkfs.ext4 /dev/myvg2024/mylv2024 
mke2fs 1.42.9 (28-Dec-2013)
Filesystem label=
OS type: Linux
Block size=1024 (log=0)
Fragment size=1024 (log=0)
Stride=0 blocks, Stripe width=0 blocks
38912 inodes, 155648 blocks
7782 blocks (5.00%) reserved for the super user
First data block=1
Maximum filesystem blocks=33816576
19 block groups
8192 blocks per group, 8192 fragments per group
2048 inodes per group
Superblock backups stored on blocks: 
	8193, 24577, 40961, 57345, 73729

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done 

7, 挂载 LV ,在根目录下创建一个挂载点：/LV/lv1
[root@centosx ~]# mkdir -p /LV/lv1
[root@centosx ~]# mount /dev/myvg2024/mylv2024 /LV/lv1/
[root@centosx ~]# 

8, 写入分区表：
[root@centosx ~]# blkid
/dev/sr0: UUID="2020-11-04-11-36-43-00" LABEL="CentOS 7 x86_64" TYPE="iso9660" PTTYPE="dos" 
/dev/sda1: UUID="4dcfc15a-67a6-454b-b525-7200eee599cb" TYPE="xfs" 
/dev/sda2: UUID="84f79e34-04d1-40fe-8cfc-ab780c4343c1" TYPE="swap" 
/dev/sda3: UUID="6f35a55a-1500-49cb-90b3-237dffdd8240" TYPE="xfs" 
/dev/sdb1: UUID="qxWs0V-3nSP-HPUj-0Mpa-cwcq-xsts-X9aY7W" TYPE="LVM2_member" 
/dev/sdb2: UUID="WP9XVu-4ItV-c8Jm-ct6b-f9PA-0NnE-Z3Va3p" TYPE="LVM2_member" 
/dev/sdb3: UUID="NXIF0J-yjaT-0b33-1GTF-1pLo-uWyx-8FivRo" TYPE="LVM2_member" 
/dev/mapper/myvg2024-mylv2024: UUID="2e22184a-5f35-4074-92ea-bcf20a04104c" TYPE="ext4" 
[root@centosx ~]# vim /etc/fstab 
[root@centosx ~]# cat /etc/fstab 

#
# /etc/fstab
# Created by anaconda on Sun May  5 20:08:17 2024
#
# Accessible filesystems, by reference, are maintained under '/dev/disk'
# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info
#
UUID=6f35a55a-1500-49cb-90b3-237dffdd8240 /                       xfs     defaults        0 0
UUID=4dcfc15a-67a6-454b-b525-7200eee599cb /boot                   xfs     defaults        0 0
UUID=84f79e34-04d1-40fe-8cfc-ab780c4343c1 swap                    swap    defaults        0 0
UUID=2e22184a-5f35-4074-92ea-bcf20a04104c /LV/lv1                 ext4    defaults        0 0

[root@centosx ~]# df -TH
Filesystem                    Type      Size  Used Avail Use% Mounted on
devtmpfs                      devtmpfs  494M     0  494M   0% /dev
tmpfs                         tmpfs     510M     0  510M   0% /dev/shm
tmpfs                         tmpfs     510M  8.8M  501M   2% /run
tmpfs                         tmpfs     510M     0  510M   0% /sys/fs/cgroup
/dev/sda3                     xfs        20G  7.8G   12G  42% /
/dev/sda1                     xfs       312M  202M  110M  65% /boot
tmpfs                         tmpfs     102M   13k  102M   1% /run/user/42
tmpfs                         tmpfs     102M     0  102M   0% /run/user/0
/dev/mapper/myvg2024-mylv2024 ext4      151M  1.6M  138M   2% /LV/lv1















       
